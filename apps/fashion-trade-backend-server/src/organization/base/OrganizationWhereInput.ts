/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ClientListRelationFilter } from "../../client/base/ClientListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { SupplierListRelationFilter } from "../../supplier/base/SupplierListRelationFilter";
import { EnumOrganizationTypeField } from "./EnumOrganizationTypeField";
import { UserAccountListRelationFilter } from "../../userAccount/base/UserAccountListRelationFilter";

@InputType()
class OrganizationWhereInput {
  @ApiProperty({
    required: false,
    type: () => ClientListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ClientListRelationFilter)
  @IsOptional()
  @Field(() => ClientListRelationFilter, {
    nullable: true,
  })
  clients?: ClientListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => SupplierListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SupplierListRelationFilter)
  @IsOptional()
  @Field(() => SupplierListRelationFilter, {
    nullable: true,
  })
  suppliers?: SupplierListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumOrganizationTypeField,
  })
  @IsEnum(EnumOrganizationTypeField)
  @IsOptional()
  @Field(() => EnumOrganizationTypeField, {
    nullable: true,
  })
  typeField?: "Option1";

  @ApiProperty({
    required: false,
    type: () => UserAccountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserAccountListRelationFilter)
  @IsOptional()
  @Field(() => UserAccountListRelationFilter, {
    nullable: true,
  })
  userAccounts?: UserAccountListRelationFilter;
}

export { OrganizationWhereInput as OrganizationWhereInput };
